{
 "Parameters": {
  "artifactsbucketkeyarnssmParameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/AMC/KMS/ArtifactsBucketKeyArn"
  },
  "artifactsbucketarnssmParameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/AMC/S3/ArtifactsBucketArn"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/ddk/dev/hnb659fds/bootstrap-version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "platformmanagers3deploymentrole6B13D8DC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-s3-deployment-role/Resource"
   }
  },
  "platformmanagers3deploymentroleDefaultPolicyF4B17FB3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "artifactsbucketkeyarnssmParameter"
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::ddk-dev-hnb659fds-assets-440278670152-eu-west-1"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::ddk-dev-hnb659fds-assets-440278670152-eu-west-1/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "artifactsbucketarnssmParameter"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Ref": "artifactsbucketarnssmParameter"
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "platformmanagers3deploymentroleDefaultPolicyF4B17FB3",
    "Roles": [
     {
      "Ref": "platformmanagers3deploymentrole6B13D8DC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-s3-deployment-role/DefaultPolicy/Resource"
   }
  },
  "platformmanagerscripts3deploymentAwsCliLayerF2724A69": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "92c405c4551a308bcdd55823f8b16268bd3c38fd2a011edaaf3ed72a80f557c4.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-script-s3-deployment/AwsCliLayer/Resource",
    "aws:asset:path": "../asset.92c405c4551a308bcdd55823f8b16268bd3c38fd2a011edaaf3ed72a80f557c4.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "platformmanagerscripts3deploymentCustomResourceE7C820F7": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     "ddk-dev-hnb659fds-assets-440278670152-eu-west-1"
    ],
    "SourceObjectKeys": [
     "d1882d2652e3b52b0531eaa0621904585164cfaf7642526a73c17fefa9cca6d5.zip"
    ],
    "DestinationBucketName": {
     "Fn::Select": [
      0,
      {
       "Fn::Split": [
        "/",
        {
         "Fn::Select": [
          5,
          {
           "Fn::Split": [
            ":",
            {
             "Ref": "artifactsbucketarnssmParameter"
            }
           ]
          }
         ]
        }
       ]
      }
     ]
    },
    "DestinationBucketKeyPrefix": "platform_notebook_manager_samples/platform_manager",
    "Prune": true,
    "SystemMetadata": {
     "sse": "aws:kms",
     "sse-kms-key-id": {
      "Fn::Select": [
       1,
       {
        "Fn::Split": [
         "/",
         {
          "Fn::Select": [
           5,
           {
            "Fn::Split": [
             ":",
             {
              "Ref": "artifactsbucketkeyarnssmParameter"
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-script-s3-deployment/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "platformmanagers3deploymentrole6B13D8DC",
      "Arn"
     ]
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "platformmanagerscripts3deploymentAwsCliLayerF2724A69"
     }
    ],
    "Runtime": "python3.7",
    "Timeout": 900
   },
   "DependsOn": [
    "platformmanagers3deploymentroleDefaultPolicyF4B17FB3",
    "platformmanagers3deploymentrole6B13D8DC"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "../asset.f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "platformmanagertablekeyA29C5678": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::440278670152:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Platform-Manager Table Key",
    "EnableKeyRotation": true,
    "PendingWindowInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-table-key/Resource"
   }
  },
  "platformmanagertablekeyAliasE36AA37E": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/pmn-sagemaker-cmk",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "platformmanagertablekeyA29C5678",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-table-key/Alias/Resource"
   }
  },
  "platformmanagerroleD0219463": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "sagemaker.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSageMakerFullAccess"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-role/Resource"
   }
  },
  "platformmanagerroleDefaultPolicy8D57F13D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "artifactsbucketkeyarnssmParameter"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "platformmanagerroleDefaultPolicy8D57F13D",
    "Roles": [
     {
      "Ref": "platformmanagerroleD0219463"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-role/DefaultPolicy/Resource"
   }
  },
  "platformmanagerpolicy465B1BF1": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject",
        "s3:PutObject",
        "s3:DeleteObject",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::*",
        "arn:aws:s3:::*/*"
       ]
      },
      {
       "Action": [
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:GetItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/amc-*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/tps-*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/wfm-*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ssm:AddTagsToResource",
        "ssm:GetParameter",
        "ssm:GetParameters",
        "ssm:PutParameter",
        "ssm:UpdateServiceSetting"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "kms:CreateGrant",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyPair",
        "kms:GenerateDataKeyPairWithoutPlaintext",
        "kms:GenerateDataKeyWithoutPlaintext",
        "kms:ReEncryptTo",
        "kms:ReEncryptFrom",
        "kms:ListAliases",
        "kms:ListGrants",
        "kms:ListKeys",
        "kms:ListKeyPolicies"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:kms:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":key/*"
         ]
        ]
       }
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:lambda:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":function:wfm-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "quicksight:ListAnalyses",
        "quicksight:ListDashboards",
        "quicksight:ListDataSets",
        "quicksight:ListDataSources",
        "quicksight:ListGroups",
        "quicksight:ListIAMPolicyAssignmentsForUser",
        "quicksight:ListTemplates",
        "quicksight:ListTemplateAliases",
        "quicksight:ListDashboardVersions",
        "quicksight:ListTemplateVersions",
        "quicksight:ListUsers",
        "quicksight:DescribeAnalysis",
        "quicksight:DescribeDashboard",
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSource",
        "quicksight:DescribeTemplate",
        "quicksight:DescribeTemplateAlias",
        "quicksight:DescribeUser",
        "quicksight:PassDataSet",
        "quicksight:PassDataSource",
        "quicksight:CreateAnalysis",
        "quicksight:CreateDashboard",
        "quicksight:CreateDataSet",
        "quicksight:CreateDataSource",
        "quicksight:CreateTemplate",
        "quicksight:CreateTemplateAlias",
        "quicksight:DeleteAnalysis",
        "quicksight:DeleteDashboard",
        "quicksight:DeleteDataSet",
        "quicksight:DeleteDataSource",
        "quicksight:DeleteTemplate",
        "quicksight:DeleteTemplateAlias",
        "quicksight:RegisterUser",
        "quicksight:Subscribe",
        "quicksight:Unsubscribe",
        "quicksight:UpdateAnalysis",
        "quicksight:UpdateDashboard",
        "quicksight:UpdateDataSet",
        "quicksight:UpdateDataSource",
        "quicksight:UpdateTemplate",
        "quicksight:UpdateTemplateAlias",
        "quicksight:UpdateDashboardPublishedVersion",
        "lakeformation:DeregisterResource",
        "lakeformation:GetDataAccess",
        "lakeformation:GrantPermissions",
        "lakeformation:PutDataLakeSettings",
        "lakeformation:GetDataLakeSettings",
        "lakeformation:RegisterResource",
        "lakeformation:RevokePermissions",
        "lakeformation:UpdateResource",
        "glue:CreateDatabase",
        "glue:CreateJob",
        "glue:CreateSecurityConfiguration",
        "glue:DeleteDatabase",
        "glue:DeleteJob",
        "glue:DeleteSecurityConfiguration",
        "glue:GetDatabase",
        "glue:GetDatabases",
        "glue:GetMapping",
        "glue:GetPartition",
        "glue:GetPartitions",
        "glue:GetPartitionIndexes",
        "glue:GetSchema",
        "glue:GetSchemaByDefinition",
        "glue:GetSchemaVersion",
        "glue:GetSchemaVersionsDiff",
        "glue:GetTable",
        "glue:GetTables",
        "glue:GetTableVersion",
        "glue:GetTableVersions",
        "glue:GetTags",
        "glue:PutDataCatalogEncryptionSettings",
        "glue:SearchTables",
        "glue:TagResource",
        "glue:UntagResource",
        "glue:UpdateDatabase",
        "glue:UpdateJob",
        "glue:ListSchemas",
        "glue:ListSchemaVersions"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "",
    "Path": "/",
    "Roles": [
     {
      "Ref": "platformmanagerroleD0219463"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-policy/Resource"
   }
  },
  "platformmanagerlc": {
   "Type": "AWS::SageMaker::NotebookInstanceLifecycleConfig",
   "Properties": {
    "NotebookInstanceLifecycleConfigName": "platform-manager-lc",
    "OnStart": [
     {
      "Content": {
       "Fn::Base64": {
        "Fn::Join": [
         "",
         [
          "\n#!/bin/bash\n              \nset -e\n                \nS3_BUCKET=",
          {
           "Fn::Select": [
            0,
            {
             "Fn::Split": [
              "/",
              {
               "Fn::Select": [
                5,
                {
                 "Fn::Split": [
                  ":",
                  {
                   "Ref": "artifactsbucketarnssmParameter"
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          },
          "\naws s3 sync s3://$S3_BUCKET/platform_notebook_manager_samples/ /home/ec2-user/SageMaker/\nchmod 777 /home/ec2-user/SageMaker/platform_manager\nchmod 777 /home/ec2-user/SageMaker/platform_manager/library\nchmod 777 /home/ec2-user/SageMaker/platform_manager/reference\nchmod 555 /home/ec2-user/SageMaker/platform_manager/-Getting_Started-.ipynb\nchmod 555 /home/ec2-user/SageMaker/platform_manager/Customers.ipynb\nchmod 555 /home/ec2-user/SageMaker/platform_manager/Workflow_Library.ipynb\nchmod 555 /home/ec2-user/SageMaker/platform_manager/Workflow_Schedules.ipynb\nchmod 555 /home/ec2-user/SageMaker/platform_manager/Workflows.ipynb\n\nsudo -u ec2-user -i << 'EOF'\n                \n# PARAMETERS\nPACKAGE=awswrangler\nENVIRONMENT=python3\n                \nsource /home/ec2-user/anaconda3/bin/activate \"$ENVIRONMENT\"\npip install --upgrade \"$PACKAGE\"\nsource /home/ec2-user/anaconda3/bin/deactivate\n                \nEOF\n                "
         ]
        ]
       }
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-lc"
   }
  },
  "platformmanagernb": {
   "Type": "AWS::SageMaker::NotebookInstance",
   "Properties": {
    "InstanceType": "ml.t2.medium",
    "RoleArn": {
     "Fn::GetAtt": [
      "platformmanagerroleD0219463",
      "Arn"
     ]
    },
    "KmsKeyId": {
     "Ref": "platformmanagertablekeyA29C5678"
    },
    "LifecycleConfigName": {
     "Fn::GetAtt": [
      "platformmanagerlc",
      "NotebookInstanceLifecycleConfigName"
     ]
    },
    "NotebookInstanceName": "amc-quickstart-platform-manager-notebooks",
    "RootAccess": "Enabled"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/platform-manager-nb"
   }
  },
  "SageMakerDataLakeSettings": {
   "Type": "AWS::LakeFormation::DataLakeSettings",
   "Properties": {
    "Admins": [
     {
      "DataLakePrincipalIdentifier": {
       "Fn::GetAtt": [
        "platformmanagerroleD0219463",
        "Arn"
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/SageMakerDataLakeSettings"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Ry07DMBD8Fu6uKc0XtKmQEAVVrcQ12jqbYPxC3o2qKMq/Y7u0gMRpxqOxd8a7kqulXN7BmRaqNQurT3I6MigjDkhhiApF3fk9RHDIGEUyNhNVcjMog7wBQqHByekQbHEW3Aer1VguXtgLeOix/dH/CLOgqpla/LRhdOj5+/HtTRBAhExynWEWFtypBTmld3YwYnzDSDp4cdS+t8jBPw5ecVZuJFmvfBbGkZyesQTJsLYaKB8KSWlSNAcGYxnxGhhPIZgnTwxe4U53qEZlsQ6+0734x5IjGuxCdJAnymTZAsMuiUdkTjHp2qKxuUGTvlVZLddnqq0upUQpm1bRJ7uoB+Lgfq/kymexH/k9+PtKPixldfdBWi/i4Fk7lIcLfgGLMzex5QEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-platform-manager/CDKMetadata/Default"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}