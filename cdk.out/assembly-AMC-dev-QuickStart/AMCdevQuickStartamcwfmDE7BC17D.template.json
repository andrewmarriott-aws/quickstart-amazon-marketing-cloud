{
 "Parameters": {
  "athenabucketkeyarnssmParameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/AMC/KMS/AthenaBucketKeyArn"
  },
  "athenabucketarnssmParameter": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/AMC/S3/AthenaBucketArn"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/ddk/dev/hnb659fds/bootstrap-version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Resources": {
  "wfmdemoteammasterkeyBC77F6A1": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::440278670152:root"
          ]
         ]
        }
       },
       "Resource": "*"
      },
      {
       "Action": [
        "kms:CreateGrant",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyPair",
        "kms:GenerateDataKeyPairWithoutPlaintext",
        "kms:GenerateDataKeyWithoutPlaintext",
        "kms:ReEncryptTo",
        "kms:ReEncryptFrom",
        "kms:ListAliases",
        "kms:ListGrants",
        "kms:ListKeys",
        "kms:ListKeyPolicies"
       ],
       "Effect": "Allow",
       "Principal": {
        "Service": "sns.amazonaws.com"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "amc WFM Service Master Key",
    "EnableKeyRotation": true,
    "PendingWindowInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-master-key/Resource"
   }
  },
  "wfmdemoteammasterkeyAlias263B963B": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/amc-wfm-demoteam-master-key",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "wfmdemoteammasterkeyBC77F6A1",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-master-key/Alias/Resource"
   }
  },
  "amcwfmdemoteammasterkeyarnssm057B1271": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "wfmdemoteammasterkeyBC77F6A1",
      "Arn"
     ]
    },
    "Name": "/AMC/KMS/wfm/demoteam/MasterKey"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/amc-wfm-demoteam-master-key-arn-ssm/Resource"
   }
  },
  "wfmdemoteamAthenaWorkGroupdev": {
   "Type": "AWS::Athena::WorkGroup",
   "Properties": {
    "Name": "wfm-demoteam-AthenaWorkGroup-dev",
    "Description": "AthenaWorkgroup used by the wfm demoteam Service",
    "RecursiveDeleteOption": true,
    "State": "ENABLED",
    "WorkGroupConfiguration": {
     "BytesScannedCutoffPerQuery": 200000000,
     "EnforceWorkGroupConfiguration": false,
     "PublishCloudWatchMetricsEnabled": false,
     "RequesterPaysEnabled": true,
     "ResultConfiguration": {
      "EncryptionConfiguration": {
       "EncryptionOption": "SSE_KMS",
       "KmsKey": {
        "Ref": "athenabucketkeyarnssmParameter"
       }
      },
      "OutputLocation": {
       "Fn::Join": [
        "",
        [
         "s3://",
         {
          "Fn::Select": [
           0,
           {
            "Fn::Split": [
             "/",
             {
              "Fn::Select": [
               5,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Ref": "athenabucketarnssmParameter"
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         },
         "/wfm-demoteam-athenaresults/"
        ]
       ]
      }
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AthenaWorkGroup-dev"
   }
  },
  "wfmdemoteamCustomerConfigdevtable732533C8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "customerId",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "customerId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "SSESpecification": {
     "KMSMasterKeyId": {
      "Fn::GetAtt": [
       "wfmdemoteammasterkeyBC77F6A1",
       "Arn"
      ]
     },
     "SSEEnabled": true,
     "SSEType": "KMS"
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "wfm-demoteam-CustomerConfig-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomerConfig-dev-table/Resource"
   }
  },
  "wfmdemoteamCustomerConfigtablearnssm752BD4E8": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "wfmdemoteamCustomerConfigdevtable732533C8",
      "Arn"
     ]
    },
    "Name": "/AMC/DynamoDB/Wfm-Demoteam-CustomerconfigTableArn"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomerConfig-table-arn-ssm/Resource"
   }
  },
  "wfmdemoteamAMCWorkflowsdevtable669FF376": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "customerId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "workflowId",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "customerId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "workflowId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "SSESpecification": {
     "KMSMasterKeyId": {
      "Fn::GetAtt": [
       "wfmdemoteammasterkeyBC77F6A1",
       "Arn"
      ]
     },
     "SSEEnabled": true,
     "SSEType": "KMS"
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "wfm-demoteam-AMCWorkflows-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AMCWorkflows-dev-table/Resource"
   }
  },
  "wfmdemoteamAMCWorkflowstablearnssmE24A71D8": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "wfmdemoteamAMCWorkflowsdevtable669FF376",
      "Arn"
     ]
    },
    "Name": "/AMC/DynamoDB/Wfm-Demoteam-AmcworkflowsTableArn"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AMCWorkflows-table-arn-ssm/Resource"
   }
  },
  "wfmdemoteamAMCWorkflowLibrarydevtableD5DD6E1B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "workflowId",
      "KeyType": "HASH"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "workflowId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "SSESpecification": {
     "KMSMasterKeyId": {
      "Fn::GetAtt": [
       "wfmdemoteammasterkeyBC77F6A1",
       "Arn"
      ]
     },
     "SSEEnabled": true,
     "SSEType": "KMS"
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "wfm-demoteam-AMCWorkflowLibrary-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AMCWorkflowLibrary-dev-table/Resource"
   }
  },
  "wfmdemoteamAMCWorkflowLibrarytablearnssm926FA0AC": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "wfmdemoteamAMCWorkflowLibrarydevtableD5DD6E1B",
      "Arn"
     ]
    },
    "Name": "/AMC/DynamoDB/Wfm-Demoteam-AmcworkflowlibraryTableArn"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AMCWorkflowLibrary-table-arn-ssm/Resource"
   }
  },
  "wfmdemoteamAMCWorkflowSchedulesdevtable695B399A": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "customerId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "Name",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "customerId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "Name",
      "AttributeType": "S"
     },
     {
      "AttributeName": "ScheduleExpression",
      "AttributeType": "S"
     },
     {
      "AttributeName": "State",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "custom-schdl-index",
      "KeySchema": [
       {
        "AttributeName": "ScheduleExpression",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "State",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "SSESpecification": {
     "KMSMasterKeyId": {
      "Fn::GetAtt": [
       "wfmdemoteammasterkeyBC77F6A1",
       "Arn"
      ]
     },
     "SSEEnabled": true,
     "SSEType": "KMS"
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "wfm-demoteam-AMCWorkflowSchedules-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AMCWorkflowSchedules-dev-table/Resource"
   }
  },
  "wfmdemoteamAMCWorkflowSchedulestablearnssm576211A6": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "wfmdemoteamAMCWorkflowSchedulesdevtable695B399A",
      "Arn"
     ]
    },
    "Name": "/AMC/DynamoDB/Wfm-Demoteam-AmcworkflowschedulesTableArn"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AMCWorkflowSchedules-table-arn-ssm/Resource"
   }
  },
  "wfmdemoteamAMCExecutionStatusdevtable2DC710FC": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "KeySchema": [
     {
      "AttributeName": "customerId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "workflowExecutionId",
      "KeyType": "RANGE"
     }
    ],
    "AttributeDefinitions": [
     {
      "AttributeName": "customerId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "workflowExecutionId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "executionStatus",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "executionStatus-workflowId-index",
      "KeySchema": [
       {
        "AttributeName": "customerId",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "executionStatus",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "NonKeyAttributes": [
        "workflowExecutionId",
        "workflowId",
        "createTime",
        "invalidationOffsetSecs",
        "lastUpdatedTime",
        "outputS3URI",
        "timeWindowStart",
        "timeWindowStartOriginal",
        "timeWindowEnd",
        "timeWindowEndOriginal",
        "parameterValues",
        "timeWindowType",
        "statusReason"
       ],
       "ProjectionType": "INCLUDE"
      }
     }
    ],
    "SSESpecification": {
     "KMSMasterKeyId": {
      "Fn::GetAtt": [
       "wfmdemoteammasterkeyBC77F6A1",
       "Arn"
      ]
     },
     "SSEEnabled": true,
     "SSEType": "KMS"
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "wfm-demoteam-AMCExecutionStatus-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AMCExecutionStatus-dev-table/Resource"
   }
  },
  "wfmdemoteamAMCExecutionStatustablearnssmFE6121F3": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "wfmdemoteamAMCExecutionStatusdevtable2DC710FC",
      "Arn"
     ]
    },
    "Name": "/AMC/DynamoDB/Wfm-Demoteam-AmcexecutionstatusTableArn"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AMCExecutionStatus-table-arn-ssm/Resource"
   }
  },
  "wfmdemoteamSNSTopicdev0E25EBDA": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "KmsMasterKeyId": {
     "Fn::GetAtt": [
      "wfmdemoteammasterkeyBC77F6A1",
      "Arn"
     ]
    },
    "TopicName": "wfm-demoteam-SNSTopic-dev"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-SNSTopic-dev/Resource"
   }
  },
  "Subscription391C9821": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Protocol": "email",
    "TopicArn": {
     "Ref": "wfmdemoteamSNSTopicdev0E25EBDA"
    },
    "Endpoint": "anmarri@amazon.com"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/Subscription/Resource"
   }
  },
  "wfmdemoteamWFMAthenaWorkgroupAccess108CC6AAF": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "athena:GetNamedQuery",
        "athena:CancelQueryExecution",
        "athena:StartQueryExecution",
        "athena:StopQueryExecution",
        "athena:GetWorkGroup",
        "athena:GetQueryResults",
        "athena:GetQueryExecution",
        "athena:BatchGetQueryExecution",
        "athena:ListQueryExecutions",
        "athena:GetQueryResultsStream"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:athena:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":workgroup/wfm-demoteam-AthenaWorkGroup-dev"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allow access to Athena Workgroups",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-WFM-Athena-WorkgroupAccess-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WFM-Athena-WorkgroupAccess-1/Resource"
   }
  },
  "wfmdemoteamWFMGlueCatalogAccess11CB141C6": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "glue:GetDatabase",
        "glue:GetDatabases",
        "glue:GetMapping",
        "glue:GetPartition",
        "glue:GetPartitions",
        "glue:GetPartitionIndexes",
        "glue:GetSchema",
        "glue:GetSchemaByDefinition",
        "glue:GetSchemaVersion",
        "glue:GetSchemaVersionsDiff",
        "glue:GetTable",
        "glue:GetTables",
        "glue:GetTableVersion",
        "glue:GetTableVersions",
        "glue:GetTags"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:glue:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":catalog"
         ]
        ]
       }
      },
      {
       "Action": [
        "glue:GetDatabase",
        "glue:GetDatabases",
        "glue:GetMapping",
        "glue:GetPartition",
        "glue:GetPartitions",
        "glue:GetPartitionIndexes",
        "glue:GetSchema",
        "glue:GetSchemaByDefinition",
        "glue:GetSchemaVersion",
        "glue:GetSchemaVersionsDiff",
        "glue:GetTable",
        "glue:GetTables",
        "glue:GetTableVersion",
        "glue:GetTableVersions",
        "glue:GetTags",
        "glue:ListJobs",
        "glue:ListSchemas",
        "glue:ListSchemaVersions"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:glue:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":database/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:glue:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allow access to Glue Catalog",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-WFM-Glue-CatalogAccess-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WFM-Glue-CatalogAccess-1/Resource"
   }
  },
  "wfmdemoteamSQSExecutionQueueRW1F2BD433B": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ListQueues",
        "sqs:ListDeadLetterSourceQueues",
        "sqs:ListQueueTags",
        "sqs:ReceiveMessage",
        "sqs:SendMessage",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:sqs:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":wfm-demoteam-dev-workflowExecution*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows access to Read and write to the AMC Workflow Execution SQS Queue",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-SQS-ExecutionQueue-RW-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-SQS-ExecutionQueue-RW-1/Resource"
   }
  },
  "wfmdemoteamWFMS3AthenaResults140504825": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutObject",
        "s3:AbortMultipartUpload",
        "s3:ListMultipartUploadParts",
        "s3:GetObject",
        "s3:GetObjectAttributes",
        "s3:GetObjectTagging",
        "s3:GetObjectVersion",
        "s3:GetObjectVersionAttributes",
        "s3:GetObjectVersionTagging",
        "s3:ListBucket",
        "s3:ListAllMyBuckets",
        "s3:ListBucketVersions",
        "s3:ListBucketMultipartUploads"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Ref": "athenabucketarnssmParameter"
          },
          "/wfm-demoteam-athenaresults/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetBucketLocation",
        "s3:ListBucket"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "athenabucketarnssmParameter"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows access to Read Athena Results From S3",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-WFM-S3-AthenaResults-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WFM-S3-AthenaResults-1/Resource"
   }
  },
  "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "kms:CreateGrant",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyPair",
        "kms:GenerateDataKeyPairWithoutPlaintext",
        "kms:GenerateDataKeyWithoutPlaintext",
        "kms:ReEncryptTo",
        "kms:ReEncryptFrom"
       ],
       "Condition": {
        "ForAnyValue:StringLike": {
         "kms:ResourceAliases": [
          "alias/amc-*",
          "alias/tps-*"
         ]
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows using the SNSSQS KMS Key for Decryption",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Workflowmgr-KMS-DecryptSNSSQS-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-Workflowmgr-KMS-DecryptSNSSQS-1/Resource"
   }
  },
  "wfmdemoteamApiGatewayAMCAPIInvoke14C7F78EE": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "execute-api:Invoke",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:execute-api:placeholder:",
          {
           "Ref": "AWS::AccountId"
          },
          ":placeholder/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows API Invoke on the AMC API Endpoints",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-ApiGateway-AMCAPIInvoke-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-ApiGateway-AMCAPIInvoke-1/Resource"
   }
  },
  "wfmdemoteamWorkflowmgrDynamoDBModifyAMCAPIInvokeIAMPolicy187ED9422": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "iam:GetPolicyVersion",
        "iam:GetPolicy",
        "iam:ListPolicyVersions",
        "iam:CreatePolicyVersion",
        "iam:DeletePolicyVersion"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "wfmdemoteamApiGatewayAMCAPIInvoke14C7F78EE"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows updating the ModifyAMCAPIInvokeIAMPolicy policy",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Workflowmgr-DynamoDB-ModifyAMCAPIInvokeIAMPolicy-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-Workflowmgr-DynamoDB-ModifyAMCAPIInvokeIAMPolicy-1/Resource"
   }
  },
  "wfmdemoteamLakeFormationGetDataAccess16FD54C37": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lakeformation:GetDataAccess",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Lake Formation Get Data Access",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-LakeFormation-GetDataAccess-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-LakeFormation-GetDataAccess-1/Resource"
   }
  },
  "wfmdemoteamLambdaExecutionQueueProducerInvoke19EC588FC": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:lambda:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":function:wfm-demoteam-ExecutionQueueProducer-dev"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows API Invoke on the AMC API Endpoints",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Lambda-ExecutionQueueProducerInvoke-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-Lambda-ExecutionQueueProducerInvoke-1/Resource"
   }
  },
  "wfmdemoteamLambdaAMCApiInterfaceInvoke18AAC03D5": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:lambda:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":function:wfm-demoteam-AmcApiInterface-dev"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows API Invoke on the AMC API Lambda",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Lambda-AMCApiInterfaceInvoke-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-Lambda-AMCApiInterfaceInvoke-1/Resource"
   }
  },
  "wfmdemoteamLambdaWorkflowExecutionConsumerInvoke11DEAA880": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:lambda:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":function:wfm-demoteam-WorkflowExecutionQueueConsumer-dev"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows API Invoke on the AMC API Lambda",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Lambda-WorkflowExecutionConsumerInvoke-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-Lambda-WorkflowExecutionConsumerInvoke-1/Resource"
   }
  },
  "wfmdemoteamLambdaSyncWorkflowStatusesinvoke15D1EB61B": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:lambda:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":function:wfm-demoteam-SyncWorkflowStatuses-dev"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Invoke on SyncWorkflow Statuses",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Lambda-SyncWorkflowStatuses-invoke-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-Lambda-SyncWorkflowStatuses-invoke-1/Resource"
   }
  },
  "wfmdemoteamLambdapermissions18917BD03": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "lambda:AddPermission",
        "lambda:RemovePermission",
        "lambda:GetPolicy"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:lambda:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":function:wfm-*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows API Invoke on the AMC API Lambda",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Lambda-permissions-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-Lambda-permissions-1/Resource"
   }
  },
  "wfmdemoteamWFMSNSPublish1E72EBBEF": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": {
        "Ref": "wfmdemoteamSNSTopicdev0E25EBDA"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Publish to SNS Topic",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-WFM-SNSPublish-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WFM-SNSPublish-1/Resource"
   }
  },
  "wfmdemoteamWFMDynamoDBReadExecutionStatus1C3CD8C87": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListTables",
        "dynamodb:ListGlobalTables",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:DescribeStream",
        "dynamodb:ListStreams",
        "dynamodb:ListShards"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "wfmdemoteamAMCExecutionStatusdevtable2DC710FC",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "wfmdemoteamAMCExecutionStatusdevtable2DC710FC",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Read DDB Execution Status",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-WFM-DynamoDB-ReadExecutionStatus-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WFM-DynamoDB-ReadExecutionStatus-1/Resource"
   }
  },
  "wfmdemoteamWFMDynamoDBWriteExecutionStatus1A2EDF180": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListTables",
        "dynamodb:ListGlobalTables",
        "dynamodb:DescribeTable",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "wfmdemoteamAMCExecutionStatusdevtable2DC710FC",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "wfmdemoteamAMCExecutionStatusdevtable2DC710FC",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Write AMC Executions Status DynamoDB Table",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Workflowmgr-DynamoDB-WriteExecutionStatus-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WFM-DynamoDB-WriteExecutionStatus-1/Resource"
   }
  },
  "wfmdemoteamDynamoDBAMCWorkflowsRead1C7FAA7AB": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListTables",
        "dynamodb:ListGlobalTables",
        "dynamodb:ListShards",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:DescribeStream",
        "dynamodb:ListStreams"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "wfmdemoteamAMCWorkflowsdevtable669FF376",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "wfmdemoteamAMCWorkflowsdevtable669FF376",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Read AMC Workflows DynamoDB Table",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-DynamoDB-AMCWorkflows-Read-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-DynamoDB-AMCWorkflows-Read-1/Resource"
   }
  },
  "wfmdemoteamWFMDynamoDBCustomerConfigRW1D8F82D7D": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListTables",
        "dynamodb:ListGlobalTables",
        "dynamodb:DescribeTable",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "wfmdemoteamCustomerConfigdevtable732533C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "wfmdemoteamCustomerConfigdevtable732533C8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Read and Write Access to Customer Config DDB Table",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Workflowmgr-DynamoDB-CustomerConfig-RW-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WFM-DynamoDB-CustomerConfig-RW-1/Resource"
   }
  },
  "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListTables",
        "dynamodb:ListGlobalTables",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:ListShards",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:DescribeStream",
        "dynamodb:ListStreams"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "wfmdemoteamCustomerConfigdevtable732533C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "wfmdemoteamCustomerConfigdevtable732533C8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Read, Scan and query access on the Customer Config DynamoDB Table",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-Workflowmgr-DynamoDB-ReadCustomerConfig-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-Workflowmgr-DynamoDB-ReadCustomerConfig-1/Resource"
   }
  },
  "wfmdemoteamWorkflowLibraryQueueConsumerDynamoDBWorkflowandWorkflowSchedulesWrite1DE0AC5D2": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListTables",
        "dynamodb:ListGlobalTables",
        "dynamodb:ListShards",
        "dynamodb:ListStreams",
        "dynamodb:DescribeTable",
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "wfmdemoteamAMCWorkflowsdevtable669FF376",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "wfmdemoteamAMCWorkflowsdevtable669FF376",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::GetAtt": [
          "wfmdemoteamAMCWorkflowSchedulesdevtable695B399A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "wfmdemoteamAMCWorkflowSchedulesdevtable695B399A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Write access to the Workflows and Workflow Schedules  DynamoDB Tables",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-WorkflowLibraryQueueConsumer-DynamoDB-WorkflowandWorkflowSchedules-Write-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowLibraryQueueConsumer-DynamoDB-WorkflowandWorkflowSchedules-Write-1/Resource"
   }
  },
  "wfmdemoteamDynamoDBWriteWorkflowLibraryWrite100E5582B": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:ListTables",
        "dynamodb:ListGlobalTables",
        "dynamodb:ListShards",
        "dynamodb:ListStreams",
        "dynamodb:DescribeTable",
        "dynamodb:DescribeStream",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "wfmdemoteamAMCWorkflowLibrarydevtableD5DD6E1B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "wfmdemoteamAMCWorkflowLibrarydevtableD5DD6E1B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Allows Write access to the WorkflowLibrary DynamoDB Table",
    "ManagedPolicyName": {
     "Fn::Join": [
      "",
      [
       "wfm-demoteam-",
       {
        "Ref": "AWS::Region"
       },
       "-DynamoDB-WriteWorkflowLibrary-Write-1"
      ]
     ]
    },
    "Path": "/"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-DynamoDB-WriteWorkflowLibrary-Write-1/Resource"
   }
  },
  "IAMRoleWorkflowScheduleTrigger14EA7C008": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the WorkflowScheduleTrigger Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEventBridgeFullAccess"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowLibraryQueueConsumerDynamoDBWorkflowandWorkflowSchedulesWrite1DE0AC5D2"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWFMDynamoDBWriteExecutionStatus1A2EDF180"
     },
     {
      "Ref": "wfmdemoteamLambdapermissions18917BD03"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role Workflow Schedule Trigger 1/Resource"
   }
  },
  "IAMRoleWorkflowScheduleTrigger1DefaultPolicy1DD05253": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleWorkflowScheduleTrigger1DefaultPolicy1DD05253",
    "Roles": [
     {
      "Ref": "IAMRoleWorkflowScheduleTrigger14EA7C008"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role Workflow Schedule Trigger 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleCustomerConfigTrigger180CA5F78": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the CustomerConfigTrigger Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonDynamoDBFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEventBridgeFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBModifyAMCAPIInvokeIAMPolicy187ED9422"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "lambda:InvokeFunction",
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:lambda:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":function:wfm-demoteam-WorkflowLibraryTrigger-dev"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "InvokeLambdaWorkflowLibraryTrigger"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role Customer Config Trigger 1/Resource"
   }
  },
  "IAMRoleCustomerConfigTrigger1DefaultPolicyE145DC86": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleCustomerConfigTrigger1DefaultPolicyE145DC86",
    "Roles": [
     {
      "Ref": "IAMRoleCustomerConfigTrigger180CA5F78"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role Customer Config Trigger 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleWorkflowLibraryTrigger1B066D817": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the WorkflowLibraryTrigger Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/CloudWatchEventsReadOnlyAccess"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWorkflowLibraryQueueConsumerDynamoDBWorkflowandWorkflowSchedulesWrite1DE0AC5D2"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamDynamoDBWriteWorkflowLibraryWrite100E5582B"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role Workflow Library Trigger 1/Resource"
   }
  },
  "IAMRoleWorkflowLibraryTrigger1DefaultPolicy419A08B1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleWorkflowLibraryTrigger1DefaultPolicy419A08B1",
    "Roles": [
     {
      "Ref": "IAMRoleWorkflowLibraryTrigger1B066D817"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role Workflow Library Trigger 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleAmcApiInterfaceLambda10A4A4BB4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the AmcApiInterface Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamApiGatewayAMCAPIInvoke14C7F78EE"
     },
     {
      "Ref": "wfmdemoteamWFMDynamoDBWriteExecutionStatus1A2EDF180"
     },
     {
      "Ref": "wfmdemoteamLambdaSyncWorkflowStatusesinvoke15D1EB61B"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role AmcApiInterface Lambda 1/Resource"
   }
  },
  "IAMRoleAmcApiInterfaceLambda1DefaultPolicy20265C72": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleAmcApiInterfaceLambda1DefaultPolicy20265C72",
    "Roles": [
     {
      "Ref": "IAMRoleAmcApiInterfaceLambda10A4A4BB4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role AmcApiInterface Lambda 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleCustomerConfigQueueConsumer1C52370CC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the CustomerConfigQueueConsumer Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamWFMDynamoDBCustomerConfigRW1D8F82D7D"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role CustomerConfigQueueConsumer 1/Resource"
   }
  },
  "IAMRoleWorkflowLibraryQueueConsumer1C7B72BA8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the WorkflowLibraryQueueConsumer Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamDynamoDBWriteWorkflowLibraryWrite100E5582B"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role WorkflowLibraryQueueConsumer 1/Resource"
   }
  },
  "IAMRoleSyncWorkflowStatuses1105A40A0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the SyncWorkflowStatuses Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamApiGatewayAMCAPIInvoke14C7F78EE"
     },
     {
      "Ref": "wfmdemoteamWFMDynamoDBCustomerConfigRW1D8F82D7D"
     },
     {
      "Ref": "wfmdemoteamWFMDynamoDBWriteExecutionStatus1A2EDF180"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role SyncWorkflowStatuses 1/Resource"
   }
  },
  "IAMRoleSyncWorkflowStatuses1DefaultPolicy3F82EC79": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleSyncWorkflowStatuses1DefaultPolicy3F82EC79",
    "Roles": [
     {
      "Ref": "IAMRoleSyncWorkflowStatuses1105A40A0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role SyncWorkflowStatuses 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleLambdaWorkflowStatusTrigger16F3A0AE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the LambdaWorkflowStatusTrigger Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     },
     {
      "Ref": "wfmdemoteamWFMDynamoDBReadExecutionStatus1C3CD8C87"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role LambdaWorkflowStatusTrigger 1/Resource"
   }
  },
  "IAMRoleLambdaWorkflowStatusTrigger1DefaultPolicy617FAD9C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleLambdaWorkflowStatusTrigger1DefaultPolicy617FAD9C",
    "Roles": [
     {
      "Ref": "IAMRoleLambdaWorkflowStatusTrigger16F3A0AE0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role LambdaWorkflowStatusTrigger 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleWorkflowTableTrigger15CB51A64": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the WorkflowTableTrigger Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     },
     {
      "Ref": "wfmdemoteamLambdaAMCApiInterfaceInvoke18AAC03D5"
     },
     {
      "Ref": "wfmdemoteamDynamoDBAMCWorkflowsRead1C7FAA7AB"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role WorkflowTableTrigger 1/Resource"
   }
  },
  "IAMRoleWorkflowTableTrigger1DefaultPolicyBC463DD4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleWorkflowTableTrigger1DefaultPolicyBC463DD4",
    "Roles": [
     {
      "Ref": "IAMRoleWorkflowTableTrigger15CB51A64"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role WorkflowTableTrigger 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleGenerateExecutionResubmissions15601DBE3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the GenerateExecutionResubmissions Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     },
     {
      "Ref": "wfmdemoteamWFMDynamoDBReadExecutionStatus1C3CD8C87"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamSQSExecutionQueueRW1F2BD433B"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role GenerateExecutionResubmissions 1/Resource"
   }
  },
  "IAMRoleGenerateExecutionResubmissions1DefaultPolicyA7C5B009": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleGenerateExecutionResubmissions1DefaultPolicyA7C5B009",
    "Roles": [
     {
      "Ref": "IAMRoleGenerateExecutionResubmissions15601DBE3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role GenerateExecutionResubmissions 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleEventQueueConsumer1B0D3CF9D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the EventQueueConsumer Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamApiGatewayAMCAPIInvoke14C7F78EE"
     },
     {
      "Ref": "wfmdemoteamWFMDynamoDBWriteExecutionStatus1A2EDF180"
     },
     {
      "Ref": "wfmdemoteamSQSExecutionQueueRW1F2BD433B"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     },
     {
      "Ref": "wfmdemoteamLambdaWorkflowExecutionConsumerInvoke11DEAA880"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role EventQueueConsumer 1/Resource"
   }
  },
  "IAMRoleEventQueueConsumer1DefaultPolicy23965F4D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleEventQueueConsumer1DefaultPolicy23965F4D",
    "Roles": [
     {
      "Ref": "IAMRoleEventQueueConsumer1B0D3CF9D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role EventQueueConsumer 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleEventQueueProducer1CA88C28B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the EventQueueProducer Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     },
     {
      "Ref": "wfmdemoteamSQSExecutionQueueRW1F2BD433B"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role EventQueueProducer 1/Resource"
   }
  },
  "IAMRoleEventQueueProducer1DefaultPolicy239E1B96": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleEventQueueProducer1DefaultPolicy239E1B96",
    "Roles": [
     {
      "Ref": "IAMRoleEventQueueProducer1CA88C28B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role EventQueueProducer 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleRunWorkFlowByCampaign1B2136B41": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the RunWorkFlowByCampaign Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrDynamoDBReadCustomerConfig1FF0BD727"
     },
     {
      "Ref": "wfmdemoteamWFMAthenaWorkgroupAccess108CC6AAF"
     },
     {
      "Ref": "wfmdemoteamWFMGlueCatalogAccess11CB141C6"
     },
     {
      "Ref": "wfmdemoteamWFMS3AthenaResults140504825"
     },
     {
      "Ref": "wfmdemoteamLambdaExecutionQueueProducerInvoke19EC588FC"
     },
     {
      "Ref": "wfmdemoteamLakeFormationGetDataAccess16FD54C37"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role RunWorkFlowByCampaign 1/Resource"
   }
  },
  "IAMRoleRunWorkFlowByCampaign1DefaultPolicy9697B8C5": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleRunWorkFlowByCampaign1DefaultPolicy9697B8C5",
    "Roles": [
     {
      "Ref": "IAMRoleRunWorkFlowByCampaign1B2136B41"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role RunWorkFlowByCampaign 1/DefaultPolicy/Resource"
   }
  },
  "IAMRoleCustomScheduler1DCB519C5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for the CustomScheduler Lambda for wfm-demoteam",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Ref": "wfmdemoteamWorkflowLibraryQueueConsumerDynamoDBWorkflowandWorkflowSchedulesWrite1DE0AC5D2"
     },
     {
      "Ref": "wfmdemoteamLambdaExecutionQueueProducerInvoke19EC588FC"
     },
     {
      "Ref": "wfmdemoteamWFMSNSPublish1E72EBBEF"
     },
     {
      "Ref": "wfmdemoteamWorkflowmgrKMSDecryptSNSSQS19C7E53A4"
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role CustomScheduler 1/Resource"
   }
  },
  "IAMRoleCustomScheduler1DefaultPolicy1EDCCE21": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "IAMRoleCustomScheduler1DefaultPolicy1EDCCE21",
    "Roles": [
     {
      "Ref": "IAMRoleCustomScheduler1DCB519C5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/IAM Role CustomScheduler 1/DefaultPolicy/Resource"
   }
  },
  "WFMHelperLayerCB60111A": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "73dc760ceabceab43744188c5880d46a939de5c559f259a4a5a1acfbb0809db1.zip"
    },
    "CompatibleRuntimes": [
     "python3.6",
     "python3.7",
     "python3.8"
    ],
    "LayerName": "wfm-demoteam-wfm-layer"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/WFMHelperLayer/Resource",
    "aws:asset:path": "../asset.73dc760ceabceab43744188c5880d46a939de5c559f259a4a5a1acfbb0809db1",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "wfmdemoteamSyncWorkflowStatusesdev20E463C4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "5e9c7c6c73c2e188c91044f5857e4960b978d301685d08691cca1e68be333402.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleSyncWorkflowStatuses1105A40A0",
      "Arn"
     ]
    },
    "Description": "Synchronizes workflow execution statues from AMC to a dynamoDB Table",
    "Environment": {
     "Variables": {
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      },
      "DEFAULT_DYNAMODB_RECORD_UPDATE_BATCH_SIZE": "50",
      "DEFAULT_DYNAMODB_BATCH_DELAY_SECONDS": "3"
     }
    },
    "FunctionName": "wfm-demoteam-SyncWorkflowStatuses-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleSyncWorkflowStatuses1DefaultPolicy3F82EC79",
    "IAMRoleSyncWorkflowStatuses1105A40A0"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-SyncWorkflowStatuses-dev/Resource",
    "aws:asset:path": "../asset.5e9c7c6c73c2e188c91044f5857e4960b978d301685d08691cca1e68be333402",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamGenerateDateRangeValuesdevServiceRole9C77A1C6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::440278670152:policy/ddk-dev-hnb659fds-permissions-boundary-440278670152-eu-west-1"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-GenerateDateRangeValues-dev/ServiceRole/Resource"
   }
  },
  "wfmdemoteamGenerateDateRangeValuesdevServiceRoleDefaultPolicyF82CCC7B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:AssignPrivateIpAddresses",
        "ec2:CreateNetworkInterface",
        "ec2:DeleteNetworkInterface",
        "ec2:DescribeNetworkInterfaces",
        "ec2:UnassignPrivateIpAddresses"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "wfmdemoteamGenerateDateRangeValuesdevServiceRoleDefaultPolicyF82CCC7B",
    "Roles": [
     {
      "Ref": "wfmdemoteamGenerateDateRangeValuesdevServiceRole9C77A1C6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-GenerateDateRangeValues-dev/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "wfmdemoteamGenerateDateRangeValuesdevC9A2BDEF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "5c031ee704d412c77b35b0487629401cc3a9edd00b8eabb53c10727389588092.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "wfmdemoteamGenerateDateRangeValuesdevServiceRole9C77A1C6",
      "Arn"
     ]
    },
    "Description": "Generates date range values which can be used in submitting multiple workflow executions",
    "FunctionName": "wfm-demoteam-GenerateDateRangeValues-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "wfmdemoteamGenerateDateRangeValuesdevServiceRoleDefaultPolicyF82CCC7B",
    "wfmdemoteamGenerateDateRangeValuesdevServiceRole9C77A1C6"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-GenerateDateRangeValues-dev/Resource",
    "aws:asset:path": "../asset.5c031ee704d412c77b35b0487629401cc3a9edd00b8eabb53c10727389588092",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamGenerateExecutionResubmissionsdevEC26CAC0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "d9b5c08398e40e92f29d9df6ab8c9152834e4fd757f55e70d9e9098e3ed6b9dc.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleGenerateExecutionResubmissions15601DBE3",
      "Arn"
     ]
    },
    "Description": "Generates execution resubmissions",
    "Environment": {
     "Variables": {
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      },
      "EXECUTION_STATUS_TABLE": {
       "Ref": "wfmdemoteamAMCExecutionStatusdevtable2DC710FC"
      }
     }
    },
    "FunctionName": "wfm-demoteam-GenerateExecutionResubmissions-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleGenerateExecutionResubmissions1DefaultPolicyA7C5B009",
    "IAMRoleGenerateExecutionResubmissions15601DBE3"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-GenerateExecutionResubmissions-dev/Resource",
    "aws:asset:path": "../asset.d9b5c08398e40e92f29d9df6ab8c9152834e4fd757f55e70d9e9098e3ed6b9dc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamWorkflowStatusTriggerdev7ABEC5EC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "da9393e47a748bfa08f841a1767021c82ce2d1351d5eb797dc924ee39aba22c2.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleLambdaWorkflowStatusTrigger16F3A0AE0",
      "Arn"
     ]
    },
    "Description": "A lambda function that process a DynamoDB Stream of workflow statuses to generate alerts",
    "Environment": {
     "Variables": {
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      },
      "EXECUTION_STATUS_TABLE": {
       "Ref": "wfmdemoteamAMCExecutionStatusdevtable2DC710FC"
      },
      "IGNORE_STATUS_LIST": "PENDING,RUNNING,SUCCEEDED,PUBLISHING"
     }
    },
    "FunctionName": "wfm-demoteam-WorkflowStatusTrigger-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleLambdaWorkflowStatusTrigger1DefaultPolicy617FAD9C",
    "IAMRoleLambdaWorkflowStatusTrigger16F3A0AE0"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowStatusTrigger-dev/Resource",
    "aws:asset:path": "../asset.da9393e47a748bfa08f841a1767021c82ce2d1351d5eb797dc924ee39aba22c2",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamWorkflowStatusTriggerdevlambdaddbeventsourcemappingC3B5710E": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "wfmdemoteamWorkflowStatusTriggerdev7ABEC5EC"
    },
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "wfmdemoteamAMCExecutionStatusdevtable2DC710FC",
      "StreamArn"
     ]
    },
    "MaximumRetryAttempts": 1,
    "StartingPosition": "TRIM_HORIZON"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowStatusTrigger-dev/lambda-ddb-event-source-mapping/Resource"
   }
  },
  "wfmdemoteamAmcApiInterfacedev1C3E5678": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "c692ec494d51a235f3e5c84d7b9cf3f2c821a5a9b9c9a36c60d4e01c3872d45f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleAmcApiInterfaceLambda10A4A4BB4",
      "Arn"
     ]
    },
    "Description": "A lambda interface that acts as a wrapper for the AMC REST API",
    "Environment": {
     "Variables": {
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      },
      "SYNC_WORKFLOW_STATUSES_LAMBDA_FUNCTION_NAME": {
       "Ref": "wfmdemoteamSyncWorkflowStatusesdev20E463C4"
      }
     }
    },
    "FunctionName": "wfm-demoteam-AmcApiInterface-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleAmcApiInterfaceLambda1DefaultPolicy20265C72",
    "IAMRoleAmcApiInterfaceLambda10A4A4BB4"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AmcApiInterface-dev/Resource",
    "aws:asset:path": "../asset.c692ec494d51a235f3e5c84d7b9cf3f2c821a5a9b9c9a36c60d4e01c3872d45f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamAmcApiInterfacedevwfmsyncExecutionStatuses9683BF54": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "wfmdemoteamAmcApiInterfacedev1C3E5678",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "wfmsyncExecutionStatusesrule",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-AmcApiInterface-dev/wfm-syncExecutionStatuses"
   }
  },
  "wfmdemoteamWorkflowTableTriggerdev59310244": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "a30858c3a41e9daa5e4ccf91bcc0042d655c22b6b1d23e9fdef431e9eccbb7bc.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleWorkflowTableTrigger15CB51A64",
      "Arn"
     ]
    },
    "Description": "Synchronizes workflow table records from the workflow DyanmoDB table to AMC",
    "Environment": {
     "Variables": {
      "AMC_API_INTERFACE_FUNCTION_NAME": {
       "Ref": "wfmdemoteamAmcApiInterfacedev1C3E5678"
      },
      "WORKFLOWS_TABLE_NAME": {
       "Ref": "wfmdemoteamAMCWorkflowsdevtable669FF376"
      }
     }
    },
    "FunctionName": "wfm-demoteam-WorkflowTableTrigger-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 128,
    "Runtime": "python3.8",
    "Timeout": 300
   },
   "DependsOn": [
    "IAMRoleWorkflowTableTrigger1DefaultPolicyBC463DD4",
    "IAMRoleWorkflowTableTrigger15CB51A64"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowTableTrigger-dev/Resource",
    "aws:asset:path": "../asset.a30858c3a41e9daa5e4ccf91bcc0042d655c22b6b1d23e9fdef431e9eccbb7bc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamWorkflowTableTriggerdevlambdaddbeventsourcemappingE6B1FE15": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "wfmdemoteamWorkflowTableTriggerdev59310244"
    },
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "wfmdemoteamAMCWorkflowsdevtable669FF376",
      "StreamArn"
     ]
    },
    "MaximumRetryAttempts": 1,
    "StartingPosition": "TRIM_HORIZON"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowTableTrigger-dev/lambda-ddb-event-source-mapping/Resource"
   }
  },
  "wfmdemoteamWorkflowExecutionQueueConsumerdev2462CABE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "453f6174e255fdc749cd5951a1b9b84f936e1687fc35dcf0325df5200f199204.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleEventQueueConsumer1B0D3CF9D",
      "Arn"
     ]
    },
    "Description": "Consumes from the Workflow Execution SQS queue and submits them to the AMC API Endpoint as a new exeuction",
    "Environment": {
     "Variables": {
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      }
     }
    },
    "FunctionName": "wfm-demoteam-WorkflowExecutionQueueConsumer-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleEventQueueConsumer1DefaultPolicy23965F4D",
    "IAMRoleEventQueueConsumer1B0D3CF9D"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowExecutionQueueConsumer-dev/Resource",
    "aws:asset:path": "../asset.453f6174e255fdc749cd5951a1b9b84f936e1687fc35dcf0325df5200f199204",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamWorkflowExecutionQueueConsumerdevwfmTriggerExecutionQueueConsumerBC34296D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "wfmdemoteamWorkflowExecutionQueueConsumerdev2462CABE",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "wfmTriggerExecutionQueueConsumerrule",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowExecutionQueueConsumer-dev/wfm-TriggerExecutionQueueConsumer"
   }
  },
  "wfmdemoteamExecutionQueueProducerdev5B752EA5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "49b4a6e5953068ac011966fe4ab6d71cf781fd091cb91bd89be673c59f25f1d1.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleEventQueueProducer1CA88C28B",
      "Arn"
     ]
    },
    "Description": "Queues a workflow exeuction in SQS to be submitted to the AMC API Interface",
    "Environment": {
     "Variables": {
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      }
     }
    },
    "FunctionName": "wfm-demoteam-ExecutionQueueProducer-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleEventQueueProducer1DefaultPolicy239E1B96",
    "IAMRoleEventQueueProducer1CA88C28B"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-ExecutionQueueProducer-dev/Resource",
    "aws:asset:path": "../asset.49b4a6e5953068ac011966fe4ab6d71cf781fd091cb91bd89be673c59f25f1d1",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamExecutionQueueProducerdevEventsInvokeProducerLambda2818F061": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "wfmdemoteamExecutionQueueProducerdev5B752EA5",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:events:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":rule/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-ExecutionQueueProducer-dev/EventsInvokeProducerLambda"
   }
  },
  "wfmdemoteamExecuteWorkflowByCampaigndevB96AEF11": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "906e0ae9f85ce85b4650eacc5f92c24b4978eafcbf830ffccedae9d1e1cd5a4d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleRunWorkFlowByCampaign1B2136B41",
      "Arn"
     ]
    },
    "Description": "execute the specified workflow and pass campaignID as a parameter from a specified Athena Table",
    "Environment": {
     "Variables": {
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      },
      "ATHENA_WORKGROUP": "wfm-demoteam-AthenaWorkGroup-dev",
      "QUEUE_WORKFLOW_EXECUTION_LAMBDA_FUNCTION_NAME": {
       "Ref": "wfmdemoteamExecutionQueueProducerdev5B752EA5"
      }
     }
    },
    "FunctionName": "wfm-demoteam-ExecuteWorkflowByCampaign-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleRunWorkFlowByCampaign1DefaultPolicy9697B8C5",
    "IAMRoleRunWorkFlowByCampaign1B2136B41"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-ExecuteWorkflowByCampaign-dev/Resource",
    "aws:asset:path": "../asset.906e0ae9f85ce85b4650eacc5f92c24b4978eafcbf830ffccedae9d1e1cd5a4d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamExecuteWorkflowByCampaigndevEventsInvokeRunByCampaignLambdaFBE053F2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "wfmdemoteamExecuteWorkflowByCampaigndevB96AEF11",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:events:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":rule/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-ExecuteWorkflowByCampaign-dev/EventsInvokeRunByCampaignLambda"
   }
  },
  "wfmdemoteamWorkflowScheduleTriggerdev5AE18E8B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "ab4b39793446d8e0f19aef03d6701f954778c421c33d301d51106284d878e140.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleWorkflowScheduleTrigger14EA7C008",
      "Arn"
     ]
    },
    "Description": "A Trigger creating Cloudwatch Rules to submit workflow executions to the workflow exeuction queue producer based on records inserted into the WorkflowSchedule DynamoDB Table",
    "Environment": {
     "Variables": {
      "EXECUTION_QUEUE_PRODUCER_LAMBA_ARN": {
       "Fn::GetAtt": [
        "wfmdemoteamExecutionQueueProducerdev5B752EA5",
        "Arn"
       ]
      },
      "RUN_WORKFLOW_BY_CAMPAIGN_LAMBDA_ARN": {
       "Fn::GetAtt": [
        "wfmdemoteamExecuteWorkflowByCampaigndevB96AEF11",
        "Arn"
       ]
      }
     }
    },
    "FunctionName": "wfm-demoteam-WorkflowScheduleTrigger-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleWorkflowScheduleTrigger1DefaultPolicy1DD05253",
    "IAMRoleWorkflowScheduleTrigger14EA7C008"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowScheduleTrigger-dev/Resource",
    "aws:asset:path": "../asset.ab4b39793446d8e0f19aef03d6701f954778c421c33d301d51106284d878e140",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamWorkflowScheduleTriggerdevlambdaddbeventsourcemapping296F618B": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "wfmdemoteamWorkflowScheduleTriggerdev5AE18E8B"
    },
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "wfmdemoteamAMCWorkflowSchedulesdevtable695B399A",
      "StreamArn"
     ]
    },
    "MaximumRetryAttempts": 1,
    "StartingPosition": "TRIM_HORIZON"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowScheduleTrigger-dev/lambda-ddb-event-source-mapping/Resource"
   }
  },
  "wfmdemoteamWorkflowLibraryTriggerdev2F58AD6C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "9776ebb280a222f67c8417c8698bff3c4486e2a2df0d0e015f65cccb02f39d9d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleWorkflowLibraryTrigger1B066D817",
      "Arn"
     ]
    },
    "Description": "A Trigger that is invoked when records are modified in the Workflow Library table, this will create workflows and schedule them to run based on their default schedule configuration",
    "Environment": {
     "Variables": {
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      },
      "WORKFLOW_LIBRARY_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamAMCWorkflowLibrarydevtableD5DD6E1B"
      },
      "WORKFLOWS_TABLE_NAME": {
       "Ref": "wfmdemoteamAMCWorkflowsdevtable669FF376"
      },
      "WORKFLOW_SCHEDULE_TABLE": {
       "Ref": "wfmdemoteamAMCWorkflowSchedulesdevtable695B399A"
      },
      "CLOUDWATCH_RULE_NAME_PREFIX": "wfm"
     }
    },
    "FunctionName": "wfm-demoteam-WorkflowLibraryTrigger-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleWorkflowLibraryTrigger1DefaultPolicy419A08B1",
    "IAMRoleWorkflowLibraryTrigger1B066D817"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowLibraryTrigger-dev/Resource",
    "aws:asset:path": "../asset.9776ebb280a222f67c8417c8698bff3c4486e2a2df0d0e015f65cccb02f39d9d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamWorkflowLibraryTriggerdevlambdaddbeventsourcemapping4EAD42E0": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "wfmdemoteamWorkflowLibraryTriggerdev2F58AD6C"
    },
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "wfmdemoteamAMCWorkflowLibrarydevtableD5DD6E1B",
      "StreamArn"
     ]
    },
    "MaximumRetryAttempts": 1,
    "StartingPosition": "TRIM_HORIZON"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-WorkflowLibraryTrigger-dev/lambda-ddb-event-source-mapping/Resource"
   }
  },
  "wfmdemoteamCustomerConfigTriggerdev79F563E3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "bec7ffda50d3f6f65132e8abe0bd3bc44cba959a89db5bb42a9db541abebcafd.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleCustomerConfigTrigger180CA5F78",
      "Arn"
     ]
    },
    "Description": "A Trigger that is invoked when records are modified in the customer config table, this will create an AMC Executions SQS Queue and update the AMC API Invoke policy to include the customer's AMC instance",
    "Environment": {
     "Variables": {
      "EXECUTION_QUEUE_PRODUCER_LAMBA_ARN": {
       "Fn::GetAtt": [
        "wfmdemoteamExecutionQueueProducerdev5B752EA5",
        "Arn"
       ]
      },
      "WORKFLOW_LIBRARY_TRIGGER_LAMBDA_FUNCTION_NAME": {
       "Fn::GetAtt": [
        "wfmdemoteamWorkflowLibraryTriggerdev2F58AD6C",
        "Arn"
       ]
      },
      "CUSTOMERS_DYNAMODB_TABLE": {
       "Ref": "wfmdemoteamCustomerConfigdevtable732533C8"
      },
      "KMS_MASTER_KEY": {
       "Fn::GetAtt": [
        "wfmdemoteammasterkeyBC77F6A1",
        "Arn"
       ]
      },
      "TEAM": "demoteam",
      "MICROSERVICE": "wfm",
      "ENV": "dev",
      "AMC_ENDPOINT_IAM_POLICY_ARN": {
       "Ref": "wfmdemoteamApiGatewayAMCAPIInvoke14C7F78EE"
      }
     }
    },
    "FunctionName": "wfm-demoteam-CustomerConfigTrigger-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleCustomerConfigTrigger1DefaultPolicyE145DC86",
    "IAMRoleCustomerConfigTrigger180CA5F78"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomerConfigTrigger-dev/Resource",
    "aws:asset:path": "../asset.bec7ffda50d3f6f65132e8abe0bd3bc44cba959a89db5bb42a9db541abebcafd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamCustomerConfigTriggerdevlambdaddbeventsourcemappingCC066DB7": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "wfmdemoteamCustomerConfigTriggerdev79F563E3"
    },
    "BatchSize": 5,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "wfmdemoteamCustomerConfigdevtable732533C8",
      "StreamArn"
     ]
    },
    "MaximumRetryAttempts": 1,
    "StartingPosition": "TRIM_HORIZON"
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomerConfigTrigger-dev/lambda-ddb-event-source-mapping/Resource"
   }
  },
  "wfmdemoteamCustomSchedulerdevC6C972E7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "ddk-dev-hnb659fds-assets-440278670152-eu-west-1",
     "S3Key": "bdd46f5189520cf151c82e6077f02e4c3e7cb82bb87ddf82b3483ea8fad0ee81.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "IAMRoleCustomScheduler1DCB519C5",
      "Arn"
     ]
    },
    "Description": "This function will query workflows based on their frequency from AMCWorkflowSchedules table and pass payload to WorkflowExecutionQueueProducer Lambda",
    "Environment": {
     "Variables": {
      "EXECUTION_QUEUE_PRODUCER_LAMBA_ARN": {
       "Fn::GetAtt": [
        "wfmdemoteamExecutionQueueProducerdev5B752EA5",
        "Arn"
       ]
      },
      "RUN_WORKFLOW_BY_CAMPAIGN_LAMBDA_ARN": {
       "Fn::GetAtt": [
        "wfmdemoteamExecuteWorkflowByCampaigndevB96AEF11",
        "Arn"
       ]
      },
      "WORKFLOW_SCHEDULE_TABLE": {
       "Ref": "wfmdemoteamAMCWorkflowSchedulesdevtable695B399A"
      },
      "CLOUDWATCH_RULE_NAME_PREFIX": "wfm"
     }
    },
    "FunctionName": "wfm-demoteam-CustomScheduler-dev",
    "Handler": "handler.lambda_handler",
    "Layers": [
     {
      "Ref": "WFMHelperLayerCB60111A"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPython:7"
       ]
      ]
     }
    ],
    "MemorySize": 2048,
    "Runtime": "python3.8",
    "Timeout": 900
   },
   "DependsOn": [
    "IAMRoleCustomScheduler1DefaultPolicy1EDCCE21",
    "IAMRoleCustomScheduler1DCB519C5"
   ],
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomScheduler-dev/Resource",
    "aws:asset:path": "../asset.bdd46f5189520cf151c82e6077f02e4c3e7cb82bb87ddf82b3483ea8fad0ee81",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "wfmdemoteamCustomSchedulerdevwfmCustomSchedulerOnHourly97EBF146": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "wfmdemoteamCustomSchedulerdevC6C972E7",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "wfmCustomSchedulerOnHourlyrule",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomScheduler-dev/wfm-CustomSchedulerOnHourly"
   }
  },
  "wfmdemoteamCustomSchedulerdevwfmCustomSchedulerOnDailyD4E2AB4D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "wfmdemoteamCustomSchedulerdevC6C972E7",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "wfmCustomSchedulerOnDailyrule",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomScheduler-dev/wfm-CustomSchedulerOnDaily"
   }
  },
  "wfmdemoteamCustomSchedulerdevwfmCustomSchedulerOnWeekly8A297B21": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "wfmdemoteamCustomSchedulerdevC6C972E7",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "wfmCustomSchedulerOnWeeklyrule",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomScheduler-dev/wfm-CustomSchedulerOnWeekly"
   }
  },
  "wfmdemoteamCustomSchedulerdevwfmCustomSchedulerOnMonthlyD8360C50": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "wfmdemoteamCustomSchedulerdevC6C972E7",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "wfmCustomSchedulerOnMonthlyrule",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-demoteam-CustomScheduler-dev/wfm-CustomSchedulerOnMonthly"
   }
  },
  "wfmTriggerExecutionQueueConsumerrule": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Runs the Workflow Execution Queue Consumer Lambda function every 10 minutes",
    "Name": "wfm-TriggerExecutionQueueConsumer",
    "ScheduleExpression": "rate(1 minute)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "wfmdemoteamWorkflowExecutionQueueConsumerdev2462CABE",
        "Arn"
       ]
      },
      "Id": "wfm-TriggerExecutionQueueConsumer",
      "Input": "{ \"method\": \"syncExecutionStatuses\" }"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-TriggerExecutionQueueConsumer-rule"
   }
  },
  "wfmsyncExecutionStatusesrule": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Runs the amc api interface lambda function every 10 minutes to get all execution statuses",
    "Name": "wfm-syncExecutionStatuses",
    "ScheduleExpression": "rate(10 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "wfmdemoteamAmcApiInterfacedev1C3E5678",
        "Arn"
       ]
      },
      "Id": "wfm-syncExecutionStatuses",
      "Input": "{ \"method\": \"syncExecutionStatuses\" }"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-syncExecutionStatuses-rule"
   }
  },
  "wfmCustomSchedulerOnHourlyrule": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Runs the CustomScheduler lambda function on hourly",
    "Name": "wfm-CustomSchedulerOnHourly",
    "ScheduleExpression": "rate(1 hour)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "wfmdemoteamCustomSchedulerdevC6C972E7",
        "Arn"
       ]
      },
      "Id": "wfm-CustomSchedulerOnHourly",
      "Input": "{\"query\": \"custom(H * *)\" }"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-CustomSchedulerOnHourly-rule"
   }
  },
  "wfmCustomSchedulerOnDailyrule": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Runs the CustomScheduler lambda function on daily",
    "Name": "wfm-CustomSchedulerOnDaily",
    "ScheduleExpression": "rate(1 hour)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "wfmdemoteamCustomSchedulerdevC6C972E7",
        "Arn"
       ]
      },
      "Id": "wfm-CustomSchedulerOnDaily",
      "Input": "{\"query\": \"custom(D * {H})\" }"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-CustomSchedulerOnDaily-rule"
   }
  },
  "wfmCustomSchedulerOnWeeklyrule": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Runs the CustomScheduler lambda function on weekly",
    "Name": "wfm-CustomSchedulerOnWeekly",
    "ScheduleExpression": "rate(1 hour)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "wfmdemoteamCustomSchedulerdevC6C972E7",
        "Arn"
       ]
      },
      "Id": "wfm-CustomSchedulerOnWeekly",
      "Input": "{\"query\": \"custom(W {D} {H})\" }"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-CustomSchedulerOnWeekly-rule"
   }
  },
  "wfmCustomSchedulerOnMonthlyrule": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "Runs the CustomScheduler lambda function on m onthyl",
    "Name": "wfm-CustomSchedulerOnMonthly",
    "ScheduleExpression": "rate(1 hour)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "wfmdemoteamCustomSchedulerdevC6C972E7",
        "Arn"
       ]
      },
      "Id": "wfm-CustomSchedulerOnMonthly",
      "Input": "{\"query\": \"custom(M {D} {H})\" }"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/wfm-CustomSchedulerOnMonthly-rule"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21R0W7CMAz8Ft5DxugXwLTtgSFVLdoekZt6JWuTVHGyqar670tSGCDt6c4X53yy13y94qsF/NBS1O2ykxUfSweiZQWS8VYge/rUOVhQ6NCy0HgcKeNbL1p0WyBkrSI+7nCIjRE2nQSKRSITI1LR00rdXH1uTScG7oQaeBA/jG1frfE9qwcNytQhzwGqLsVIJBjqMPBgeimSmEjpKxJW9k4aHdXbemISQoQ9aGiwzk0nRQp7LxRmHpLw2jSziXWgqhr4+AYD2ne0dB50V794LS4J/vjzN2pXpl3uoe/DGuLz/2qOVkmiFJqyIxChI76JwDD+oLikwsc1JDXcqjn/vRxsYvngTkY/ZPxxxbPFF0m5tF47qZAXM/4CxE2xB/cBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "AMC-dev-QuickStart/amc-wfm/CDKMetadata/Default"
   }
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}